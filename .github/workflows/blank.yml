name: Terraform Deploy AKS Cluster on Azure

on:
  push:
    branches:
      - main
  pull_request:
  # workflow_dispatch:   # allows manual trigger

permissions:
  id-token: write        # Required for OIDC authentication
  contents: read

# env:
  # TF_LOG: INFO
  # TF_IN_AUTOMATION: true
  # ARM_USE_OIDC: true

jobs:
  terraform:
    name: Deploy AKS via Terraform
    runs-on: ubuntu-latest
    # environment: Dev

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      # ARM_USE_OIDC: true
      TF_VAR_location: "eastus"
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_VALUE }}

      # Terraform backend config (Azure Storage)
      TF_STATE_RESOURCE_GROUP: terraform-state-rg
      TF_STATE_STORAGE_ACCOUNT: terraformk8stfstatefiles
      TF_STATE_CONTAINER: k8stfstate
      TF_STATE_BLOB: k8sproject.tfstate

    defaults:
      run:
        working-directory: ./

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      # - name: Terraform Format Check
      #  run: terraform fmt -check

      - name: Terraform Init
        working-directory: ./
        run: |
          terraform init \
            -backend-config="resource_group_name=terraform-state-rg" \
            -backend-config="storage_account_name=terraformk8stfstatefiles" \
            -backend-config="container_name=k8stfstate" \
            -backend-config="key=k8sproject.tfstate" \
            -backend-config="use_oidc=true" \
            -lock=true \
            -lock-timeout=180s

      - name: Terraform Validate
        working-directory: ./
        run: terraform validate

      - name: Terraform Plan
        # id: plan
        working-directory: ./
        run: terraform plan -out=tfplan

      # Optional: Require manual approval before applying
      # - name: Wait for manual approval
      #  if: github.event_name == 'workflow_dispatch'
      #  uses: trstringer/manual-approval@v1
      #  with:
      #    secret: ${{ github.token }}
      #    approvers: hozefaezzy
      #    minimum-approvals: 1
      #    timeout-minutes: 30

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: ./
        run: terraform apply -auto-approve -input=false tfplan

      - name: Terraform Output
        run: terraform output
